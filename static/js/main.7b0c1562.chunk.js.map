{"version":3,"sources":["utils.js","App.js","reportWebVitals.js","index.js"],"names":["context","window","AudioContext","ids","map","Map","mapPlay","play","value","event","push","set","oscillator","createOscillator","gain","createGain","connect","destination","type","frequency","setValueAtTime","exponentialRampToValueAtTime","currentTime","start","stop","time","length","get","App","keysWhite","values","keysBlack","useState","elem","setELem","press","useRef","useEffect","current","focus","clickPlay","useCallback","note","element","classList","add","clickStop","remove","onPlayDown","code","entity","includes","currentTarget","querySelector","onStopUp","ref","tabIndex","onKeyUp","e","onKeyDown","onMouseUp","className","onMouseDown","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","KeyS","KeyE","KeyD","KeyR","KeyF","KeyY","KeyG","KeyU","KeyH","KeyI","KeyJ","KeyK","document","getElementById"],"mappings":"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","file":"static/js/main.7b0c1562.chunk.js","sourcesContent":["const context = new window.AudioContext();\nlet ids = [];\nexport const map = new Map();\nexport const mapPlay = new Map();\n\nexport const play = (value, event) => {\n    if (event) ids.push(event);\n\n    map.set(event, true);\n    const oscillator = context.createOscillator();\n    const gain = context.createGain();\n\n    oscillator.connect(gain);\n    gain.connect(context.destination);\n    oscillator.type = \"sine\";\n\n    oscillator.frequency.value = value;\n    gain.gain.setValueAtTime(0.1, 0);\n    gain.gain.exponentialRampToValueAtTime(0.001, context.currentTime + 3);\n\n    oscillator.start(context.currentTime);\n    mapPlay.set(event, {\n        oscillator: oscillator,\n        context: context.currentTime,\n    });\n};\n\nexport const stop = (event, time) => {\n    if (event && ids.length && !mapPlay.get(event)) {\n        event = ids[0];\n        ids = [];\n    }\n\n    const { oscillator, context } = mapPlay.get(event);\n    if(oscillator && context) {\n        oscillator.stop(context + time);\n        ids = [];\n        map.set(event, \"\");\n        mapPlay.set(event, \"\");\n    }\n};\n","import \"./App.css\";\nimport { map, mapPlay, play, stop } from \"./utils\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nfunction App({ keysWhite, values, keysBlack }) {\n  const [elem, setELem] = useState(null);\n  const press = useRef();\n\n  useEffect(() => {\n    press.current.focus();\n  }, []);\n\n  const clickPlay = useCallback(\n    (note, element) => {\n      element.classList.add(\"down\");\n      setELem({\n        element,\n        note,\n      });\n      play(values[note], note);\n    },\n    [values]\n  );\n\n  const clickStop = useCallback(() => {\n    if (elem) {\n      elem.element.classList.remove(\"down\");\n      stop(elem.note, 0);\n      setELem(null);\n    }\n  }, [elem]);\n\n  const onPlayDown = useCallback(\n    (code, entity) => {\n      if (\n        !map.get(code) &&\n        [...keysWhite, ...keysBlack].includes(code) &&\n        values[code]\n      ) {\n        entity.currentTarget.querySelector(`.${code}`).classList.add(\"down\");\n        return play(values[code], code);\n      }\n    },\n    [keysBlack, keysWhite, values]\n  );\n\n  const onStopUp = useCallback(\n    (code, entity) => {\n      if ([...keysWhite, ...keysBlack].includes(code) && mapPlay.get(code)) {\n        entity.currentTarget.querySelector(`.${code}`).classList.remove(\"down\");\n        stop(code, 0.1);\n      }\n    },\n    [keysBlack, keysWhite]\n  );\n\n  return (\n    <div\n      ref={press}\n      tabIndex=\"0\"\n      onKeyUp={(e) => onStopUp(e.code, e)}\n      onKeyDown={(e) => onPlayDown(e.code, e)}\n      onMouseUp={clickStop}\n      className={\"main\"}\n    >\n      <h2>work key [S, D, F, G, H, J, K, E, R, Y, U, I]</h2>\n      <div className={\"black\"}>\n        {keysBlack.map((note) => (\n          <div\n            className={note}\n            onMouseDown={(entity) => clickPlay(note, entity.target)}\n            key={note}\n          />\n        ))}\n      </div>\n\n      <div className={\"piano\"}>\n        {keysWhite.map((note) => (\n          <div\n            className={note}\n            onMouseDown={(entity) => clickPlay(note, entity.target)}\n            key={note}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst keysWhite = [\n  \"KeyS\",\n  \"KeyD\",\n  \"KeyF\",\n  \"KeyG\",\n  \"KeyH\",\n  \"KeyJ\",\n  \"KeyK\"\n];\n\nconst keysBlack = [\n    \"KeyE\",\n    \"KeyR\",\n    \"KeyY\",\n    \"KeyU\",\n    \"KeyI\"\n];\n\nconst values = {\n  KeyS: 130.81,\n  KeyE: 138,\n  KeyD: 146.83,\n  KeyR: 154,\n  KeyF: 164.81,\n  KeyY: 172,\n  KeyG: 174.61,\n  KeyU: 184,\n  KeyH: 196.0,\n  KeyI: 205.0,\n  KeyJ: 220.0,\n  KeyK: 246.94,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App keysWhite={keysWhite} keysBlack={keysBlack} values={values} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}