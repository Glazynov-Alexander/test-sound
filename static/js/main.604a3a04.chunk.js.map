{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","width","height","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","up","animations","x","y","radius","color","value","context","window","AudioContext","webkitAudioContext","canvas","document","getElementById","ctx","getContext","beginPath","lineWidth","arc","Math","PI","lineTo","closePath","fillStyle","fill","time","oscillator","createOscillator","gain","createGain","connect","destination","type","frequency","setValueAtTime","currentTime","start","exponentialRampToValueAtTime","stop","play","setTimeout","clearRect","addEventListener","event","code","ReactDOM","render","StrictMode"],"mappings":"6KAeeA,MAbf,WACE,OAAO,wDAEH,8BACI,wBACIC,MAAO,SACPC,OAAQ,SACRC,GAAI,kBCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCgBVQ,GAAK,EAEHC,EAAa,SAACC,EAAGC,EAAGC,EAAQC,EAAOC,GACvC,IAAIC,EAAU,IAAKC,OAAOC,cAAgBD,OAAOE,oBAC7CC,EAASC,SAASC,eAAe,WACjCC,EAAMH,EAAOI,WAAW,MAG1BD,EAAIE,YACJF,EAAIG,UAAY,EAChBH,EAAII,IAAIhB,EAAGC,EAAGC,EAAQ,EAAa,EAAVe,KAAKC,IAAQ,GACtCN,EAAIO,OAAOnB,EAAGC,GACdW,EAAIQ,YACJR,EAAIS,UAAYlB,EAChBS,EAAIU,OA/BG,SAAClB,EAAOmB,GACjB,IAAIlB,EAAU,IAAKC,OAAOC,cAAgBD,OAAOE,oBAC7CgB,EAAanB,EAAQoB,mBACrBC,EAAOrB,EAAQsB,aAEnBH,EAAWI,QAAQF,GACnBA,EAAKE,QAAQvB,EAAQwB,aACrBL,EAAWM,KAAO,SAElBN,EAAWO,UAAU3B,MAAQA,EAC7BsB,EAAKA,KAAKM,eAAe,IAAM3B,EAAQ4B,aACvCT,EAAWU,MAAM7B,EAAQ4B,aAEzBP,EAAKA,KAAKS,6BAA6B,KAAOZ,EAAO,GACrDC,EAAWY,KAAKb,EAAO,KAqBvBc,CAAKjC,EAAOC,EAAQ4B,aAClBnC,GAAK,EAELwC,YAAW,WACX1B,EAAI2B,UAAU,EAAG,EAAG9B,EAAOvB,MAAOuB,EAAOtB,UACxC,MAGLmB,OAAOI,SAAS8B,iBAAiB,WAAW,SAACC,GACxB,SAAfA,EAAMC,MAAoB5C,IAC5BA,GAAK,EACLC,EAAW,IAAK,IAAK,IAAK,MAAO,MAEhB,SAAf0C,EAAMC,MAAoB5C,IAC5BA,GAAK,EACLC,EAAW,IAAK,IAAK,IAAK,OAAQ,MAEjB,SAAf0C,EAAMC,MAAoB5C,IAC5BA,GAAK,EACLC,EAAW,IAAK,IAAK,IAAK,QAAS,MAElB,SAAf0C,EAAMC,MAAoB5C,IAC5BA,GAAK,EACLC,EAAW,IAAK,IAAK,IAAK,SAAU,SAIxC4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAG1BtB,K","file":"static/js/main.604a3a04.chunk.js","sourcesContent":["import \"./App.css\";\n\nfunction App() {\n  return <div>\n      work key [w, e, f, g]\n      <div>\n          <canvas\n              width={\"1620px\"}\n              height={\"1008px\"}\n              id={\"animate\"}>\n          </canvas>\n      </div>\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet play = (value, time) => {\n  let context = new (window.AudioContext || window.webkitAudioContext)();\n  let oscillator = context.createOscillator();\n  let gain = context.createGain();\n\n  oscillator.connect(gain);\n  gain.connect(context.destination);\n  oscillator.type = \"square\";\n\n  oscillator.frequency.value = value;\n  gain.gain.setValueAtTime(0.01, context.currentTime);\n  oscillator.start(context.currentTime);\n\n  gain.gain.exponentialRampToValueAtTime(0.001, time + 2);\n  oscillator.stop(time + 0.05);\n};\n\nlet up = false;\n\nconst animations = (x, y, radius, color, value) => {\n  let context = new (window.AudioContext || window.webkitAudioContext)();\n  let canvas = document.getElementById(\"animate\");\n  let ctx = canvas.getContext(\"2d\");\n\n  const draw = () => {\n    ctx.beginPath();\n    ctx.lineWidth = 6;\n    ctx.arc(x, y, radius, 0, Math.PI * 2, true);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  };\n\n  draw();\n  play(value, context.currentTime);\n    up = false;\n\n    setTimeout(() => {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }, 100);\n};\n\nwindow.document.addEventListener(\"keydown\", (event) => {\n  if (event.code === \"KeyE\" && !up) {\n    up = true;\n    animations(600, 600, 200, \"red\", 100);\n  }\n  if (event.code === \"KeyF\" && !up) {\n    up = true;\n    animations(600, 600, 300, \"blue\", 150);\n  }\n  if (event.code === \"KeyW\" && !up) {\n    up = true;\n    animations(600, 600, 300, \"green\", 150);\n  }\n  if (event.code === \"KeyG\" && !up) {\n    up = true;\n    animations(600, 600, 300, \"yellow\", 150);\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}