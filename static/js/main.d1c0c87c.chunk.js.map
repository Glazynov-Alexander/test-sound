{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","width","height","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","context","window","AudioContext","webkitAudioContext","oscillator","createOscillator","up","canvas","document","getElementById","animations","x","y","radius","color","value","ctx","getContext","beginPath","lineWidth","arc","Math","PI","lineTo","closePath","fillStyle","fill","gain","createGain","connect","destination","type","frequency","setValueAtTime","currentTime","start","play","addEventListener","event","code","includes","can","stop","clearRect","stopr","ReactDOM","render","StrictMode"],"mappings":"6KAeeA,MAbf,WACE,OAAO,wDAEH,8BACI,wBACIC,MAAO,SACPC,OAAQ,SACRC,GAAI,kBCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDVQ,EAAU,IAAKC,OAAOC,cAAgBD,OAAOE,oBAC7CC,EAAaJ,EAAQK,mBACrBC,GAAK,EACLC,EAASC,SAASC,eAAe,WAgB/BC,EAAa,SAACC,EAAGC,EAAGC,EAAQC,EAAOC,GACvCT,GAAK,EAEL,IAAIU,GADJT,EAASC,SAASC,eAAe,YAChBQ,WAAW,MAG1BD,EAAIE,YACJF,EAAIG,UAAY,EAChBH,EAAII,IAAIT,EAAGC,EAAGC,EAAQ,EAAa,EAAVQ,KAAKC,IAAQ,GACtCN,EAAIO,OAAOZ,EAAGC,GACdI,EAAIQ,YACJR,EAAIS,UAAYX,EAChBE,EAAIU,OA1BG,SAACX,GACVf,EAAU,IAAKC,OAAOC,cAAgBD,OAAOE,oBAC7CC,EAAaJ,EAAQK,mBACrB,IAAIsB,EAAO3B,EAAQ4B,aAEnBxB,EAAWyB,QAAQF,GACnBA,EAAKE,QAAQ7B,EAAQ8B,aACrB1B,EAAW2B,KAAO,SAElB3B,EAAW4B,UAAUjB,MAAQA,EAC7BY,EAAKA,KAAKM,eAAe,EAAGjC,EAAQkC,aACpC9B,EAAW+B,MAAMnC,EAAQkC,aAmBzBE,CAAKrB,IAUPd,OAAOO,SAAS6B,iBAAiB,WAAW,SAACC,GACxB,SAAfA,EAAMC,MAAoBjC,GAC5BI,EAAW,IAAK,IAAK,IAAK,UAAW,KAEpB,SAAf4B,EAAMC,MAAoBjC,GAC5BI,EAAW,IAAK,IAAK,IAAK,YAAa,KAEtB,SAAf4B,EAAMC,MAAoBjC,GAC5BI,EAAW,IAAK,IAAK,IAAK,UAAW,KAEpB,SAAf4B,EAAMC,MAAoBjC,GAC5BI,EAAW,IAAK,IAAK,IAAK,UAAW,QAIzCT,OAAOO,SAAS6B,iBAAiB,SAAS,SAACC,GAC1B,CAAE,OAAQ,OAAQ,OAAQ,QAC/BE,SAASF,EAAMC,OAxBf,WAAO,IAAD,EACZE,EAAG,UAAGlC,SAAH,aAAG,EAAQU,WAAW,MAC7Bb,EAAWsC,KAAK1C,EAAQkC,aACxBO,EAAIE,UAAU,EAAG,EAAG,KAAM,MAC1BrC,GAAK,EAqBCsC,MAIRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAG1BlB,K","file":"static/js/main.d1c0c87c.chunk.js","sourcesContent":["import \"./App.css\";\n\nfunction App() {\n  return <div>\n      work key [w, e, f, g]\n      <div>\n          <canvas\n              width={\"1620px\"}\n              height={\"1008px\"}\n              id={\"animate\"}>\n          </canvas>\n      </div>\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlet context = new (window.AudioContext || window.webkitAudioContext)();\nlet oscillator = context.createOscillator();\nlet up = false;\nlet canvas = document.getElementById(\"animate\");\n\nlet play = (value) => {\n  context = new (window.AudioContext || window.webkitAudioContext)();\n  oscillator = context.createOscillator();\n  let gain = context.createGain();\n\n  oscillator.connect(gain);\n  gain.connect(context.destination);\n  oscillator.type = \"square\";\n\n  oscillator.frequency.value = value;\n  gain.gain.setValueAtTime(1, context.currentTime);\n  oscillator.start(context.currentTime);\n};\n\nconst animations = (x, y, radius, color, value) => {\n  up = true;\n  canvas = document.getElementById(\"animate\");\n  let ctx = canvas.getContext(\"2d\");\n\n  const draw = () => {\n    ctx.beginPath();\n    ctx.lineWidth = 6;\n    ctx.arc(x, y, radius, 0, Math.PI * 2, true);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  };\n\n  draw();\n  play(value);\n};\n\nlet stopr = () => {\n  let can = canvas?.getContext(\"2d\");\n  oscillator.stop(context.currentTime);\n  can.clearRect(0, 0, 1620, 1008);\n  up = false;\n};\n\nwindow.document.addEventListener(\"keydown\", (event) => {\n  if (event.code === \"KeyE\" && !up) {\n    animations(600, 600, 200, \"#f78047\", 100);\n  }\n  if (event.code === \"KeyF\" && !up) {\n    animations(600, 600, 300, \"#70dce191\", 300);\n  }\n  if (event.code === \"KeyW\" && !up) {\n    animations(600, 600, 300, \"#83ef81\", 200);\n  }\n  if (event.code === \"KeyG\" && !up) {\n    animations(600, 600, 300, \"#efdf1c\", 150);\n  }\n});\n\nwindow.document.addEventListener(\"keyup\", (event) => {\n    const keys = [ \"KeyW\", \"KeyE\", \"KeyF\", \"KeyG\" ];\n    if(keys.includes(event.code)) {\n        stopr();\n    }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}